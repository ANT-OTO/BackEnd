#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ANTOTOLib
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ANTOTO")]
	public partial class antoto_dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSecRoleFunction(SecRoleFunction instance);
    partial void UpdateSecRoleFunction(SecRoleFunction instance);
    partial void DeleteSecRoleFunction(SecRoleFunction instance);
    #endregion
		
		public antoto_dbDataContext() : 
				base(global::ANTOTOLib.Properties.Settings.Default.ANTOTOConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public antoto_dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public antoto_dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public antoto_dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public antoto_dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SecRoleFunction> SecRoleFunctions
		{
			get
			{
				return this.GetTable<SecRoleFunction>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Role_Update")]
		public int sp_Role_Update([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> pSecRoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string pRoleName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pParentRoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pSystemRole, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pAvailable, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pCompanyId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pCopeFromRoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pLastUpdateBy, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pLastUpdateByType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pSecRoleId, pRoleName, pParentRoleId, pSystemRole, pAvailable, pCompanyId, pCopeFromRoleId, pLastUpdateBy, pLastUpdateByType);
			pSecRoleId = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_RoleFunctionUpdate")]
		public int sp_RoleFunctionUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pSecRoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pSecFunctionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pGranted, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pActionForSubRole, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pActionForSubFunction, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pLastUpdateBy, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pLastUpdateByType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pSecRoleId, pSecFunctionId, pGranted, pActionForSubRole, pActionForSubFunction, pLastUpdateBy, pLastUpdateByType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.tfnCompanyRoleListGet", IsComposable=true)]
		public IQueryable<tfnCompanyRoleListGetResult> tfnCompanyRoleListGet([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pCompanyId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pUserId)
		{
			return this.CreateMethodCallQuery<tfnCompanyRoleListGetResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pCompanyId, pUserId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.tfnSecRoleFunctionListGet", IsComposable=true)]
		public IQueryable<tfnSecRoleFunctionListGetResult> tfnSecRoleFunctionListGet([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pSecRoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pUserId)
		{
			return this.CreateMethodCallQuery<tfnSecRoleFunctionListGetResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pSecRoleId, pUserId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UserSession_Validate")]
		public ISingleResult<sp_UserSession_ValidateResult> sp_UserSession_Validate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(256)")] string pToken)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pToken);
			return ((ISingleResult<sp_UserSession_ValidateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UserLogin")]
		public ISingleResult<sp_UserLoginResult> sp_UserLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(256)")] string pEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(512)")] string pPwd)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pEmail, pPwd);
			return ((ISingleResult<sp_UserLoginResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.tfnUserProfileGet", IsComposable=true)]
		public IQueryable<tfnUserProfileGetResult> tfnUserProfileGet([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pUserId)
		{
			return this.CreateMethodCallQuery<tfnUserProfileGetResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pUserId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UserSession_Create")]
		public int sp_UserSession_Create([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pUserId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pExpiredSeconds, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pSystemLanguageId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pCompanyId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pLastUpdateBy, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pLastUpdateByType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> pUserSessionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(256)")] ref string pToken)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pUserId, pExpiredSeconds, pSystemLanguageId, pCompanyId, pLastUpdateBy, pLastUpdateByType, pUserSessionId, pToken);
			pUserSessionId = ((System.Nullable<int>)(result.GetParameterValue(6)));
			pToken = ((string)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.tfnUserCompanyListGet", IsComposable=true)]
		public IQueryable<tfnUserCompanyListGetResult> tfnUserCompanyListGet([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pUserId)
		{
			return this.CreateMethodCallQuery<tfnUserCompanyListGetResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pUserId);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecRoleFunction")]
	public partial class SecRoleFunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SecRoleId;
		
		private int _SecFunctionId;
		
		private bool _Available;
		
		private System.Data.Linq.Binary _Version;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastUpdate;
		
		private int _LastUpdateBy;
		
		private int _LastUpdateByType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSecRoleIdChanging(int value);
    partial void OnSecRoleIdChanged();
    partial void OnSecFunctionIdChanging(int value);
    partial void OnSecFunctionIdChanged();
    partial void OnAvailableChanging(bool value);
    partial void OnAvailableChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateChanging(System.DateTime value);
    partial void OnLastUpdateChanged();
    partial void OnLastUpdateByChanging(int value);
    partial void OnLastUpdateByChanged();
    partial void OnLastUpdateByTypeChanging(int value);
    partial void OnLastUpdateByTypeChanged();
    #endregion
		
		public SecRoleFunction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecRoleId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SecRoleId
		{
			get
			{
				return this._SecRoleId;
			}
			set
			{
				if ((this._SecRoleId != value))
				{
					this.OnSecRoleIdChanging(value);
					this.SendPropertyChanging();
					this._SecRoleId = value;
					this.SendPropertyChanged("SecRoleId");
					this.OnSecRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecFunctionId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SecFunctionId
		{
			get
			{
				return this._SecFunctionId;
			}
			set
			{
				if ((this._SecFunctionId != value))
				{
					this.OnSecFunctionIdChanging(value);
					this.SendPropertyChanging();
					this._SecFunctionId = value;
					this.SendPropertyChanged("SecFunctionId");
					this.OnSecFunctionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this.OnAvailableChanging(value);
					this.SendPropertyChanging();
					this._Available = value;
					this.SendPropertyChanged("Available");
					this.OnAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateByType", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LastUpdateByType
		{
			get
			{
				return this._LastUpdateByType;
			}
			set
			{
				if ((this._LastUpdateByType != value))
				{
					this.OnLastUpdateByTypeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateByType = value;
					this.SendPropertyChanged("LastUpdateByType");
					this.OnLastUpdateByTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class tfnCompanyRoleListGetResult
	{
		
		private int _SecRoleId;
		
		private int _ParentRoleId;
		
		private int _CompanyId;
		
		private string _RoleName;
		
		private bool _Changable;
		
		private bool _Available;
		
		public tfnCompanyRoleListGetResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecRoleId", DbType="Int NOT NULL")]
		public int SecRoleId
		{
			get
			{
				return this._SecRoleId;
			}
			set
			{
				if ((this._SecRoleId != value))
				{
					this._SecRoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentRoleId", DbType="Int NOT NULL")]
		public int ParentRoleId
		{
			get
			{
				return this._ParentRoleId;
			}
			set
			{
				if ((this._ParentRoleId != value))
				{
					this._ParentRoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Changable", DbType="Bit NOT NULL")]
		public bool Changable
		{
			get
			{
				return this._Changable;
			}
			set
			{
				if ((this._Changable != value))
				{
					this._Changable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Bit NOT NULL")]
		public bool Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this._Available = value;
				}
			}
		}
	}
	
	public partial class tfnSecRoleFunctionListGetResult
	{
		
		private int _SecFunctionId;
		
		private string _FunctionKey;
		
		private string _FunctionName;
		
		private string _ParentFunctionKey;
		
		private int _ParentSecFunctionId;
		
		private bool _Available;
		
		private bool _Granted;
		
		public tfnSecRoleFunctionListGetResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecFunctionId", DbType="Int NOT NULL")]
		public int SecFunctionId
		{
			get
			{
				return this._SecFunctionId;
			}
			set
			{
				if ((this._SecFunctionId != value))
				{
					this._SecFunctionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionKey", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string FunctionKey
		{
			get
			{
				return this._FunctionKey;
			}
			set
			{
				if ((this._FunctionKey != value))
				{
					this._FunctionKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string FunctionName
		{
			get
			{
				return this._FunctionName;
			}
			set
			{
				if ((this._FunctionName != value))
				{
					this._FunctionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentFunctionKey", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ParentFunctionKey
		{
			get
			{
				return this._ParentFunctionKey;
			}
			set
			{
				if ((this._ParentFunctionKey != value))
				{
					this._ParentFunctionKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentSecFunctionId", DbType="Int NOT NULL")]
		public int ParentSecFunctionId
		{
			get
			{
				return this._ParentSecFunctionId;
			}
			set
			{
				if ((this._ParentSecFunctionId != value))
				{
					this._ParentSecFunctionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Bit NOT NULL")]
		public bool Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this._Available = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Granted", DbType="Bit NOT NULL")]
		public bool Granted
		{
			get
			{
				return this._Granted;
			}
			set
			{
				if ((this._Granted != value))
				{
					this._Granted = value;
				}
			}
		}
	}
	
	public partial class sp_UserSession_ValidateResult
	{
		
		private int _UserId;
		
		private int _SystemLanguageId;
		
		private int _CompanyId;
		
		public sp_UserSession_ValidateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemLanguageId", DbType="Int NOT NULL")]
		public int SystemLanguageId
		{
			get
			{
				return this._SystemLanguageId;
			}
			set
			{
				if ((this._SystemLanguageId != value))
				{
					this._SystemLanguageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
	}
	
	public partial class sp_UserLoginResult
	{
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _CompanyId;
		
		private string _CompanyName;
		
		private System.Nullable<bool> _isDefault;
		
		private System.Nullable<int> _RoleId;
		
		public sp_UserLoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(256)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDefault", DbType="Bit")]
		public System.Nullable<bool> isDefault
		{
			get
			{
				return this._isDefault;
			}
			set
			{
				if ((this._isDefault != value))
				{
					this._isDefault = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	public partial class tfnUserProfileGetResult
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _LoginName;
		
		private string _Password;
		
		private int _PhoneNumberId;
		
		private int _PhoneNumberCountryId;
		
		private string _PhoneNumber;
		
		private int _AddressId;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _District;
		
		private string _State;
		
		private string _Zip;
		
		private int _CountryId;
		
		private bool _Available;
		
		public tfnUserProfileGetResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this._LoginName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberId", DbType="Int NOT NULL")]
		public int PhoneNumberId
		{
			get
			{
				return this._PhoneNumberId;
			}
			set
			{
				if ((this._PhoneNumberId != value))
				{
					this._PhoneNumberId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberCountryId", DbType="Int NOT NULL")]
		public int PhoneNumberCountryId
		{
			get
			{
				return this._PhoneNumberCountryId;
			}
			set
			{
				if ((this._PhoneNumberCountryId != value))
				{
					this._PhoneNumberCountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", DbType="Int NOT NULL")]
		public int AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					this._AddressId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(128)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this._Zip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL")]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Bit NOT NULL")]
		public bool Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this._Available = value;
				}
			}
		}
	}
	
	public partial class tfnUserCompanyListGetResult
	{
		
		private System.Nullable<int> _CompanyId;
		
		private string _CompanyName;
		
		private System.Nullable<int> _RoleId;
		
		public tfnUserCompanyListGetResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(256)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
